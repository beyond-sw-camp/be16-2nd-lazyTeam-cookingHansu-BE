apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookinghansu-deployment
  namespace: cookinghansu
spec:
  replicas: 2
  # 아래의 label은 replicaset이 관리해야 할 파드를 결정하는데 사용
  selector:
    matchLabels:
      app: our-cookinghansu
  template:
    metadata:
    # 아래의 labels는 service의 selector.app과 일치해야함
      labels:
        app: our-cookinghansu
    spec:
      containers:
      - name: our-cookinghansu
        image: 346903264902.dkr.ecr.ap-northeast-2.amazonaws.com/6team/cookinghansu:latest # 1.21.6, 1.22.1
        ports: 
        - containerPort: 8080
        resources:
        # 컨테이너가 사용할 수 있는 리소스의 최대치
          limits:
            cpu: "1"
            memory: "500Mi"
        # 컨테이너가 시작될때 보장받아야 하는 최소 자원
          requests:
            cpu: "0.5"
            memory: "250Mi"
        env:
        # 아래의 name과 yml의 ${}의 변수명과 일치해야함.
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: DB_HOST
        - name: DB_PW
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: DB_PW
        - name: AWS_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: AWS_ACCESS_KEY
        - name: AWS_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: AWS_SECRET_KEY
        - name: JWT_SECRET_KEY_AT
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: JWT_SECRET_KEY_AT
        - name: JWT_SECRET_KEY_RT
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: JWT_SECRET_KEY_RT
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: ADMIN_EMAIL
        - name: ADMIN_PW
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: ADMIN_PW
        - name: KAKAO_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: cookinghansu-secrets
              key: KAKAO_CLIENT_ID
        - name: GOOGLE_CLIENT_ID
          valueFrom:
              secretKeyRef:
                name: cookinghansu-secrets
                key: GOOGLE_CLIENT_ID
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
              secretKeyRef:
                name: cookinghansu-secrets
                key: GOOGLE_CLIENT_SECRET
        - name: NAVER_CLIENT_ID
          valueFrom:
              secretKeyRef:
                  name: cookinghansu-secrets
                  key: NAVER_CLIENT_ID
        - name: NAVER_CLIENT_SECRET
          valueFrom:
              secretKeyRef:
                  name: cookinghansu-secrets
                  key: NAVER_CLIENT_SECRET
        - name: TZ
          value: Asia/Seoul

        # 컨테이너 상태 확인을 통해 롤링업데이트 최적화
        readinessProbe:
          httpGet:
            # healthcheck 경로
            path: /user/health
            port: 8080
          # 컨테이너 시작 후 지연
          initialDelaySeconds: 10
          # 확인 반복 주기
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: cookinghansu-service
  namespace: cookinghansu
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: our-cookinghansu